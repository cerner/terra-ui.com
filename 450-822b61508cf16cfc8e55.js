(window.webpackJsonp=window.webpackJsonp||[]).push([[450],{2859:function(t,e,a){"use strict";a.r(e),a.d(e,"default",(function(){return i}));a(0);var n=a(331);function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p={};function i(t){var e=t.components,a=o(t,["components"]);return Object(n.mdx)("wrapper",r({},p,a,{components:e,mdxType:"MDXLayout"}),Object(n.mdx)("h1",{id:"how-to-show-status-overlays"},"How to Show Status Overlays"),Object(n.mdx)("p",null,"Status View can be rendered within the framework by rendering an ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay"},"ApplicationStatusOverlay")," component. Status Views will be rendered by the closest ancestor ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay-provider"},"ApplicationStatusOverlayProvider"),". All content rendered within the responding ApplicationStatusOverlayProvider will be overlaid."),Object(n.mdx)("pre",null,Object(n.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState } from \'react\';\nimport ApplicationStatusOverlay from \'terra-application/lib/application-status-overlay\';\n\nconst ExampleComponent = () => {\n  const [showStatusOverlay, setShowStatusOverlay] = useState(false);\n\n  return (\n    <div>\n      <p>This component toggles a status view that lasts for 3 seconds.</p>\n      <p>\n        <button\n          type="button"\n          onClick={() => {\n            setShowStatusOverlay(true);\n\n            setTimeout(() => {\n              setShowStatusOverlay(false);\n            }, 3000);\n          }}\n        >\n          Show Status View\n        </button>\n      </p>\n      {showStatusOverlay && <ApplicationStatusOverlay message="Demo for showing status overlay view" variant="no-data" />}\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n')),Object(n.mdx)("p",null,"Any component that wants to create an status view container for its children can render its own ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay-provider"},"ApplicationStatusOverlayProvider")," to scope status view presentation to that container."),Object(n.mdx)("blockquote",null,Object(n.mdx)("p",{parentName:"blockquote"},"Note: ApplicationStatusOverlayProviders are provided by ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-base"},"ApplicationBase"),", ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-navigation"},"ApplicationNavigation")," , ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/modal-manager"},"ModalManager"),", and the ",Object(n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/slide-panel-manager"},"SlidePanelManager"),".")))}i.isMDXComponent=!0}}]);