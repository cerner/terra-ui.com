(window.webpackJsonp=window.webpackJsonp||[]).push([[434],{2952:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return i}));r(0);var n=r(331);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c={};function i(e){var t=e.components,r=o(e,["components"]);return Object(n.mdx)("wrapper",a({},c,r,{components:t,mdxType:"MDXLayout"}),Object(n.mdx)("h1",{id:"terra-cli"},"Terra CLI"),Object(n.mdx)("p",null,"Terra CLI is a command line builder that supports creating ",Object(n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#commands"},"yargs commands")," via defining ",Object(n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"command modules"),". Currently, terra-cli searches for a ",Object(n.mdx)("inlineCode",{parentName:"p"},"terra-cli")," directory in a given dependency and assumes that all subdirectories are separate command modules defined via ",Object(n.mdx)("inlineCode",{parentName:"p"},"index.js")," files in those subdirectories."),Object(n.mdx)("h2",{id:"allow-list"},"Allow List"),Object(n.mdx)("p",null,"To limit who can create these commands, terra-cli currently uses an allow list to only search for the following dependencies:"),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"@cerner/terra-functional-testing"),Object(n.mdx)("li",{parentName:"ul"},"@cerner/terra-open-source-scripts")),Object(n.mdx)("h2",{id:"dependency-searching"},"Dependency Searching"),Object(n.mdx)("p",null,"The search paths that terra-cli uses to search for terra-cli commands includes (constrained by the ",Object(n.mdx)("a",{parentName:"p",href:"#allow-list"},"allow list")," mentioned above):"),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"The current project's src directory"),Object(n.mdx)("li",{parentName:"ul"},"The src directory within subdirectories of the packages directory if the current project is ",Object(n.mdx)("inlineCode",{parentName:"li"},"terra-toolkit")),Object(n.mdx)("li",{parentName:"ul"},"The lib directory within subdirectories of the node_modules directory")),Object(n.mdx)("p",null,"We use the src directory in the first two cases to allow for easier local development."),Object(n.mdx)("h2",{id:"example-command"},"Example command"),Object(n.mdx)("p",null,"If you want to create a command ",Object(n.mdx)("inlineCode",{parentName:"p"},"test"),", you should add a file at ",Object(n.mdx)("inlineCode",{parentName:"p"},"src/terra-cli/test/index.js")," within a dependency in the allowlist. This file should be set up to be copied but not transpiled over to the ",Object(n.mdx)("inlineCode",{parentName:"p"},"lib")," directory. The file should contain something similar to:"),Object(n.mdx)("pre",null,Object(n.mdx)("code",{parentName:"pre",className:"language-javascript"},"const test = {\n  command: 'test',\n  describe: 'Test command description',\n  builder: (yargs) => testOptionsBuilder,\n  handler: testHandler,\n};\n\nmodule.exports = test;\n")),Object(n.mdx)("p",null,"For more information on how to create these modules see the ",Object(n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"yargs documentation"),"."),Object(n.mdx)("p",null,"To run this command, you would execute:"),Object(n.mdx)("pre",null,Object(n.mdx)("code",{parentName:"pre",className:"language-sh"},"terra test <options>\n")))}i.isMDXComponent=!0}}]);