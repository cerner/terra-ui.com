(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{1149:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var a=n(0),r=n.n(a),o=n(967),i=n.n(o),l=function(e){var t=e.url;return r.a.createElement(i.a,{src:"https://github.com/cerner/terra-framework/tree/main/packages/terra-disclosure-manager",name:"terra-disclosure-manager",version:"4.39.0",url:t})}},2895:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));n(0);var a=n(331),r=n(1149);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l={};function d(e){var t=e.components,n=i(e,["components"]);return Object(a.mdx)("wrapper",o({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.mdx)(r.a,{mdxType:"Badge"}),Object(a.mdx)("h1",{id:"disclosing-content-with-a-header"},"Disclosing Content With a Header"),Object(a.mdx)("p",null,"Implementations of the DisclosureManager must render a header containing controls for the various disclosure management actions (close, back, maximize/minimize, etc.). "),Object(a.mdx)("p",null,"The ",Object(a.mdx)("inlineCode",{parentName:"p"},"DisclosureManagerHeaderAdapter")," can be used to register header information to the disclosing manager. This can be usd to register a title and a collapsibleMenuView."),Object(a.mdx)("h2",{id:"disclosuremanagerheaderadapter"},"DisclosureManagerHeaderAdapter"),Object(a.mdx)("p",null,"The DisclosureManagerHeaderAdapter can be rendered by the disclosed content to inject their own component-specific contents into that header."),Object(a.mdx)("p",null,Object(a.mdx)("inlineCode",{parentName:"p"},"DisclosureManagerHeaderAdapter")," Props:"),Object(a.mdx)("table",null,Object(a.mdx)("thead",{parentName:"table"},Object(a.mdx)("tr",{parentName:"thead"},Object(a.mdx)("th",{parentName:"tr",align:null},"Prop"),Object(a.mdx)("th",{parentName:"tr",align:null},"Is Required"),Object(a.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(a.mdx)("tbody",{parentName:"table"},Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("inlineCode",{parentName:"td"},"title")),Object(a.mdx)("td",{parentName:"tr",align:null},"optional"),Object(a.mdx)("td",{parentName:"tr",align:null},"A string to render as the header's title. Used if the title was not provided as a parameter in the disclosure.")),Object(a.mdx)("tr",{parentName:"tbody"},Object(a.mdx)("td",{parentName:"tr",align:null},Object(a.mdx)("inlineCode",{parentName:"td"},"collapsibleMenuView")),Object(a.mdx)("td",{parentName:"tr",align:null},"optional"),Object(a.mdx)("td",{parentName:"tr",align:null},"A CollapsibleMenuView component to render within the header.")))),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { DisclosureManagerContext, DisclosureManagerHeaderAdapter } from 'terra-disclosure-manager';\nimport Button from 'terra-button';\nimport CollapsibleMenuView from 'terra-collapsible-menu-view';\n\nconst DisclosedComponent = () => {\n  const disclosureManager = React.useContext(DisclosureManagerContext);\n\n  return (\n    <React.Fragment>\n     <DisclosureManagerHeaderAdapter\n       title=\"My Disclosure Component\"\n       collapsibleMenuView={<CollapsibleMenuView />}\n     />\n      <Button\n        text=\"Close Modal\"\n        onClick={() => {\n          disclosureManager.closeDisclosure();\n        }}\n      />\n    </React.Fragment>\n  );\n};\n")),Object(a.mdx)("p",null,"This will register the header information on mount."),Object(a.mdx)("h2",{id:"providing-a-title-on-disclose"},"Providing a Title on Disclose"),Object(a.mdx)("p",null,"It has been observed that there can be a 'pop-in' affect with the header render in slow domains and using the ",Object(a.mdx)("inlineCode",{parentName:"p"},"DisclosureManagerHeaderAdapter"),". It is recommended to provide a ",Object(a.mdx)("inlineCode",{parentName:"p"},"title")," parameter to the disclose function that will render the disclosed content to ensure the header is rendered immediately. This will render the header with the title, and then the ",Object(a.mdx)("inlineCode",{parentName:"p"},"DisclosureManagerHeaderAdapter")," can be used to add additional button content into the header. While disclosing with a title parameter, the disclose title will have priority, even if a title value is provided through the ",Object(a.mdx)("inlineCode",{parentName:"p"},"DisclosureManagerHeaderAdapter"),"."),Object(a.mdx)("pre",null,Object(a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { DisclosureManagerContext } from 'terra-disclosure-manager';\nimport Button from 'terra-button';\nconst DisclosingComponent = () => {\n  const disclosureManager = React.useContext(DisclosureManagerContext);\n  return (\n    <Button\n      text=\"Launch Modal\"\n      onClick={() => {\n        disclosureManager.disclose({\n          preferredType: 'modal',\n          content: {\n            key: 'MY-MODAL-DISCLOSURE',\n            title: 'MY-MODAL-DISCLOSURE',\n            component: <MyDisclosureComponent />,\n          }\n        });\n      }}\n    />\n  );\n};\n")))}d.isMDXComponent=!0},967:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(2)),o=l(n(4)),i=l(n(968));function l(e){return e&&e.__esModule?e:{default:e}}var d=o.default.bind(i.default),s={name:r.default.string.isRequired,src:r.default.string,url:r.default.string,version:r.default.string.isRequired},c=function(e){var t=e.src,n=e.name,r=e.url,o=e.version,i=a.default.createElement("a",{className:d("badge"),href:r||"https://www.npmjs.org/package/".concat(n,"/v/").concat(o)},a.default.createElement("span",{className:d("badge-name")},r?"package":"npm"),a.default.createElement("span",{className:d("badge-version")},"v".concat(o))),l=t?a.default.createElement("a",{className:d("badge"),href:t},a.default.createElement("span",{className:d("badge-name")},"github"),a.default.createElement("span",{className:d("badge-version")},"source")):void 0;return a.default.createElement("div",{className:d("badge-container")},i,l)};c.propTypes=s;var m=c;t.default=m},968:function(e,t,n){"use strict";n.r(t),t.default={badge:"Badges-module__badge___1ATf2","badge-container":"Badges-module__badge-container___5v0AK","badge-name":"Badges-module__badge-name___1rRv5","badge-version":"Badges-module__badge-version___2Cim-"}}}]);